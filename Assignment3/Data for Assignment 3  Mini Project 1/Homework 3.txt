%1.%
Mdl1 = fitcknn(Xtrain,ytrain,'NumNeighbors',7);
pre1 = predict(Mdl1, Xtest);
re1=pre1 - ytest;
[row1,col1]=size(ytest);
match1=0;

for i=1:1:row1
if re1(i,1)==0
match1 = match1+1;
end
end

per1=match1/row1;
fprintf('%.2f%%. \n',per1*100);

%2-1.%
Mdl = fitcknn(X_train,y_train,'NumNeighbors',7,'Standardize',1);
pre=predict(Mdl, X_test);
re=pre-y_test';
[row,col]=size(y_test);
match=0;

for i=1:1:col
if re(i,1)==0
match = match+1;
end
end

per=match/col
fprintf('%.2f%%. \n',per*100);

%2-2%
net.divideParam.trainRatio = 1; % training set [%]
net.divideParam.valRatio = 0; % validation set [%]
net.divideParam.testRatio = 0; % test set [%]

net=feedforwardnet(25);
net = configure(net, X_train', y_train);
result=net(X_test')